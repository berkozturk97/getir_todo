[{"/Users/berk/Documents/React/getir_todo/src/reportWebVitals.js":"1","/Users/berk/Documents/React/getir_todo/src/App.js":"2","/Users/berk/Documents/React/getir_todo/src/index.js":"3","/Users/berk/Documents/React/getir_todo/src/redux/actions.js":"4","/Users/berk/Documents/React/getir_todo/src/redux/states.js":"5","/Users/berk/Documents/React/getir_todo/src/redux/reducer.js":"6","/Users/berk/Documents/React/getir_todo/src/redux/store.js":"7","/Users/berk/Documents/React/getir_todo/src/hook/useStateCallback.js":"8","/Users/berk/Documents/React/getir_todo/src/components/modal/Modal.jsx":"9","/Users/berk/Documents/React/getir_todo/src/components/TodoContents/TodoList.jsx":"10","/Users/berk/Documents/React/getir_todo/src/components/Tables/TableContent.jsx":"11","/Users/berk/Documents/React/getir_todo/src/components/Tables/Table.jsx":"12","/Users/berk/Documents/React/getir_todo/src/components/TodoContents/TodoInput.jsx":"13"},{"size":362,"mtime":1607780918278,"results":"14","hashOfConfig":"15"},{"size":728,"mtime":1607885567653,"results":"16","hashOfConfig":"15"},{"size":626,"mtime":1607786603228,"results":"17","hashOfConfig":"15"},{"size":2916,"mtime":1607870210244,"results":"18","hashOfConfig":"15"},{"size":170,"mtime":1607785141068,"results":"19","hashOfConfig":"15"},{"size":1647,"mtime":1607868749274,"results":"20","hashOfConfig":"15"},{"size":272,"mtime":1607796362476,"results":"21","hashOfConfig":"15"},{"size":706,"mtime":1607864106756,"results":"22","hashOfConfig":"15"},{"size":1591,"mtime":1607889888101,"results":"23","hashOfConfig":"15"},{"size":2822,"mtime":1607894112919,"results":"24","hashOfConfig":"15"},{"size":1271,"mtime":1607891450097,"results":"25","hashOfConfig":"15"},{"size":1410,"mtime":1607891654599,"results":"26","hashOfConfig":"15"},{"size":1248,"mtime":1607892968824,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"114lemt",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/berk/Documents/React/getir_todo/src/reportWebVitals.js",[],"/Users/berk/Documents/React/getir_todo/src/App.js",[],"/Users/berk/Documents/React/getir_todo/src/index.js",[],"/Users/berk/Documents/React/getir_todo/src/redux/actions.js",["56","57","58"],"/Users/berk/Documents/React/getir_todo/src/redux/states.js",[],"/Users/berk/Documents/React/getir_todo/src/redux/reducer.js",["59"],"/Users/berk/Documents/React/getir_todo/src/redux/store.js",[],"/Users/berk/Documents/React/getir_todo/src/hook/useStateCallback.js",["60"],"import React, { useState, useRef, useEffect } from 'react';\n\nfunction useStateCallback(initialState) {\n    const [state, setState] = useState(initialState);\n    const cbRef = useRef(null); // mutable ref to store current callback\n  \n    const setStateCallback = (state, cb) => {\n      cbRef.current = cb; // store passed callback to ref\n      setState(state);\n    };\n  \n    useEffect(() => {\n      // cb.current is `null` on initial render, so we only execute cb on state *updates*\n      if (cbRef.current) {\n        cbRef.current(state);\n        cbRef.current = null; // reset callback after execution\n      }\n    }, [state]);\n  \n    return [state, setStateCallback];\n  }\n\nexport default useStateCallback;","/Users/berk/Documents/React/getir_todo/src/components/modal/Modal.jsx",["61","62"],"/Users/berk/Documents/React/getir_todo/src/components/TodoContents/TodoList.jsx",["63"],"/Users/berk/Documents/React/getir_todo/src/components/Tables/TableContent.jsx",["64"],"import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { visibleModal, selectObject } from \"../../redux/actions\";\n\nfunction TableContent({ item, index }) {\n  let dispatch = useDispatch();\n\n  const openModal = () => {\n    dispatch(selectObject(item));\n    dispatch(visibleModal(true));\n  };\n\n  return (\n    <Draggable key={item._id} draggableId={JSON.stringify(item)} index={index}>\n      {(provided, snapshot) => {\n        return (\n          <div\n            onClick={() => openModal()}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={{\n              justifyContent: \"center\",\n              borderRadius: 8,\n              userSelect: \"none\",\n              padding: 10,\n              margin: \"0 0 8px 0\",\n              minHeight: \"50px\",\n              backgroundColor: item.status === 0 ? \"#5D3EBC\" : (item.status === 1 ? \"#13910E\"  : \"#BF0003\"),\n              color: \"white\",\n              ...provided.draggableProps.style,\n            }}\n          >\n            <p style={{fontSize: 15}}>{item.title}</p>\n          </div>\n        );\n      }}\n    </Draggable>\n  );\n}\n\nexport default TableContent;\n","/Users/berk/Documents/React/getir_todo/src/components/Tables/Table.jsx",[],"/Users/berk/Documents/React/getir_todo/src/components/TodoContents/TodoInput.jsx",[],{"ruleId":"65","severity":1,"message":"66","line":72,"column":23,"nodeType":"67","messageId":"68","endLine":72,"endColumn":31},{"ruleId":"65","severity":1,"message":"66","line":99,"column":23,"nodeType":"67","messageId":"68","endLine":99,"endColumn":31},{"ruleId":"65","severity":1,"message":"66","line":114,"column":23,"nodeType":"67","messageId":"68","endLine":114,"endColumn":31},{"ruleId":"65","severity":1,"message":"69","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"65","severity":1,"message":"70","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"71","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":39,"column":1,"nodeType":"74","messageId":"75","endLine":54,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":37,"column":6,"nodeType":"78","endLine":37,"endColumn":16,"suggestions":"79"},{"ruleId":"65","severity":1,"message":"80","line":3,"column":23,"nodeType":"67","messageId":"68","endLine":3,"endColumn":34},"no-unused-vars","'errorMsg' is assigned a value but never used.","Identifier","unusedVar","'act' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setColumns', 'todos.done', 'todos.inProgress', and 'todos.todo'. Either include them or remove the dependency array.","ArrayExpression",["81"],"'useSelector' is defined but never used.",{"desc":"82","fix":"83"},"Update the dependencies array to be: [dispatch, setColumns, todos.done, todos.inProgress, todos.todo]",{"range":"84","text":"85"},[1015,1025],"[dispatch, setColumns, todos.done, todos.inProgress, todos.todo]"]